{"version":3,"sources":["components/TodoListTemplate.js","components/Palette.js","components/Form.js","components/TodoItemList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoListTemplate","palette","form","list","color","className","Color","active","onClick","style","background","Palette","colors","selected","onSelect","colorList","map","lalala","Form","value","onChange","onKeyPress","onCreate","TodoItem","this","props","text","checked","id","onToggle","onRemove","borderColor","backgroundColor","e","stopPropagation","icon","Component","TodoItemList","todos","todoList","library","add","faTrashAlt","faEdit","App","state","input","handleChange","setState","target","handleKeyPress","key","handleCreate","concat","alert","handleToggle","index","findIndex","todo","nextTodos","handleRemove","filter","handleSelectColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.100f9ffa.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TodoListTemplate.css';\r\n\r\nconst TodoListTemplate = ({palette, form, list, color}) =>{\r\n    return(\r\n        <main>\r\n            <section className=\"palette-wrapper\">\r\n                {palette}\r\n            </section>\r\n            <section className=\"form-wrapper\">\r\n                {form}\r\n            </section>\r\n            <section className=\"list-wrapper\">\r\n                {list}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default TodoListTemplate;","import React from 'react';\r\nimport './Palette.css';\r\n\r\nconst Color=({color, active, onClick})=>{\r\n    return(\r\n        <div className={`color-data ${active ? 'active':''}`} style={{background:color}} onClick={onClick}></div>\r\n    )\r\n\r\n}\r\n\r\nconst Palette=({colors, selected, onSelect})=>{\r\n\r\n    const colorList = colors.map(\r\n        (lalala)=>(<Color color={lalala} active={selected===lalala} onClick={()=>onSelect(lalala)} key={lalala}/>)\r\n    );\r\n\r\n    return(\r\n        <div className=\"color-list\">\r\n            {colorList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Palette;","import React from 'react';\r\nimport './Form.css';\r\n\r\nconst Form = ({value, onChange, onKeyPress, onCreate, color}) => {\r\n    return(\r\n        <div className=\"form\">\r\n            <input value={value} onChange={onChange} onKeyPress={onKeyPress}/>\r\n            <div className=\"create-button\" onClick={onCreate} style={{background:color}}>+</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;","import React, {Component} from 'react';\r\nimport './TodoItemList.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\nclass TodoItem extends Component{\r\n    render(){\r\n        const {text, checked, id, onToggle, onRemove, color} = this.props;\r\n        return(\r\n            <div className=\"todo-item\" onClick={()=>onToggle(id)}>\r\n                <div className={`checked-circle ${checked ? 'checked':''}`} style={{borderColor:color, color:checked?'#fff':color, backgroundColor:checked?color:''}}>✓</div>\r\n                <div className={`todo-text ${checked ? 'checked' : ''}`}>\r\n                    {text}\r\n                </div>\r\n                {/* <div className=\"edit\" onClick={(e)=>{\r\n                    e.stopPropagation();\r\n                    onEdit(id)}}><FontAwesomeIcon icon=\"edit\"/>\r\n                </div> */}\r\n                <div className=\"remove\" onClick={(e)=>{\r\n                    e.stopPropagation(); \r\n                    onRemove(id)}}><FontAwesomeIcon icon=\"trash-alt\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass TodoItemList extends Component{\r\n    render(){\r\n        const {todos, onToggle, onRemove} = this.props;\r\n        const todoList = todos.map(\r\n            ({id, text, checked, color}) => (\r\n                <TodoItem\r\n                    id={id}\r\n                    text={text}\r\n                    checked={checked}\r\n                    key={id}\r\n                    onToggle={onToggle}\r\n                    onRemove={onRemove}\r\n                    color={color}\r\n                />\r\n            )\r\n        );\r\n        return(\r\n            <div>\r\n                {todoList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoItemList;","import React, {Component} from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport Palette from './components/Palette';\nimport Form from './components/Form';\nimport TodoItemList from './components/TodoItemList';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrashAlt, faEdit);\n\n\nclass App extends Component{\n\n  id=1;\n  state={\n    input:'',\n    todos:[\n      {id:0, text:'안녀용', checked:false}\n    ],\n    color:'#343a40'\n  }\n\n  handleChange=(e)=>{\n    this.setState({\n      input:e.target.value\n    })\n  }  \n\n  handleKeyPress=(e)=>{\n    if(e.key === 'Enter'){\n      this.handleCreate();\n    }\n  }\n\n  handleCreate=()=>{\n    const {input, todos, color} = this.state;\n    if(!input) alert(\"내용을 입력해주세요.\");\n    else{this.setState({\n      input:'',\n      todos:todos.concat({\n        id:this.id++,\n        text:input,\n        checked:false,\n        color:color\n      })\n    })}\n  }\n\n  handleToggle=(id)=>{\n    const {todos} = this.state;\n    const index = todos.findIndex(todo => todo.id === id);\n    const selected = todos[index];\n    const nextTodos = [...todos];\n\n    nextTodos[index] = {...selected, checked: !selected.checked};\n\n    this.setState({\n      todos:nextTodos\n    });\n  }\n\n  handleRemove=(id)=>{\n    const {todos} = this.state;\n    \n    this.setState({\n      todos:todos.filter(todo => todo.id !== id)\n    })\n  }\n\n  handleSelectColor=(color)=>{\n    this.setState({\n      color\n    })\n  }\n\n  render(){\n    \n    const colors=['#343a40', '#f03e3e', '#12b886', '#228ae6'];\n    const {input, todos, color} = this.state;\n    const {\n      handleChange, \n      handleKeyPress, \n      handleCreate,\n      handleToggle,\n      handleRemove,\n      handleSelectColor\n    } = this;\n    return (\n      <div>\n      <TodoListTemplate \n        form={(\n          <Form\n            value={input}\n            onChange={handleChange}\n            onKeyPress={handleKeyPress}\n            onCreate={handleCreate}\n            color={color}\n          />)}        \n        list={(\n          <TodoItemList \n            todos={todos} \n            onToggle={handleToggle} \n            onRemove={handleRemove}\n          />)}\n        palette={(\n          <Palette \n            colors={colors} \n            onSelect={handleSelectColor} \n            selected={color}\n          />)}\n      >\n      </TodoListTemplate>\n       </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}